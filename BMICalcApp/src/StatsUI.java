
import classes.User;
import classes.BmiResult;
import java.time.format.DateTimeFormatter;
import javax.swing.table.DefaultTableModel;
import java.util.ArrayList;
import java.util.List;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;
import java.awt.Color;
import org.jfree.chart.renderer.category.BarRenderer;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
/**
 *
 * @author mputu
 */
public class StatsUI extends javax.swing.JFrame {

    User userLogin;

    List<BmiResult> listBMIResult;

    /**
     * Creates new form StatsUI
     */
    public StatsUI() {
        initComponents();
    }

    public StatsUI(User user) {
        initComponents();
        userLogin = user;

        jLabelUser.setText(userLogin.getFirstName() + "'s");

        listBMIResult = new ArrayList<BmiResult>();

        List<String> listBMIString = viewBmiResult(userLogin.getEmail());
        for (String bmiString : listBMIString) {
            BmiResult bmiResult = new BmiResult(bmiString);
            listBMIResult.add(bmiResult);
        }
        refreshTable();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabelUser = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableResult = new javax.swing.JTable();
        jButtonHome = new javax.swing.JButton();
        jButtonGenerate = new javax.swing.JButton();
        jButtonPrint = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jLabelUser.setFont(new java.awt.Font("MS UI Gothic", 1, 14)); // NOI18N
        jLabelUser.setText("<user>");

        jLabel1.setFont(new java.awt.Font("MS UI Gothic", 1, 14)); // NOI18N
        jLabel1.setText("history");

        jTableResult.setFont(new java.awt.Font("MS UI Gothic", 0, 12)); // NOI18N
        jTableResult.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Weight", "Height", "BMI", "Category", "Date "
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Float.class, java.lang.Float.class, java.lang.Float.class, java.lang.String.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTableResult);

        jButtonHome.setFont(new java.awt.Font("MS UI Gothic", 0, 12)); // NOI18N
        jButtonHome.setText("Home");
        jButtonHome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonHomeActionPerformed(evt);
            }
        });

        jButtonGenerate.setText("Generate Graph");
        jButtonGenerate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonGenerateActionPerformed(evt);
            }
        });

        jButtonPrint.setText("Print");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButtonHome)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabelUser)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jLabel1))
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 477, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jButtonPrint)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButtonGenerate))))
                .addContainerGap(19, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelUser)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 359, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonPrint)
                    .addComponent(jButtonGenerate))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                .addComponent(jButtonHome)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    public void refreshTable() {
        DefaultTableModel model = (DefaultTableModel) jTableResult.getModel();
        model.setRowCount(0);
        //model.getDataVector().removeAllElements();
        Object[] valueData = new Object[5];

        for (BmiResult bmiResult : listBMIResult) {
            valueData[0] = bmiResult.getWeight();
            valueData[1] = bmiResult.getHeight();
            valueData[2] = bmiResult.getBmi();
            valueData[3] = classifyBMI(bmiResult.getBmi());
            valueData[4] = bmiResult.getDate_added().format(DateTimeFormatter.ofPattern("dd-MM-yyyy HH:mm:ss"));

            model.addRow(valueData);
        }

        jTableResult.getColumnModel().getColumn(0).setPreferredWidth(20);
        jTableResult.getColumnModel().getColumn(1).setPreferredWidth(20);
        jTableResult.getColumnModel().getColumn(2).setPreferredWidth(20);
        jTableResult.getColumnModel().getColumn(3).setPreferredWidth(100);
        jTableResult.getColumnModel().getColumn(4).setPreferredWidth(100);
        jTableResult.setAutoResizeMode(jTableResult.AUTO_RESIZE_LAST_COLUMN);
    }

    private void jButtonHomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonHomeActionPerformed
        // TODO add your handling code here:
        MainUI mainUI = new MainUI(userLogin);
        mainUI.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButtonHomeActionPerformed

    private void jButtonGenerateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonGenerateActionPerformed
        // TODO add your handling code here:

//        DefaultCategoryDataset dataSet = new DefaultCategoryDataset();
//        dataSet.setValue(2010, "Year", "Day 1");
//        dataSet.setValue(2011, "Year", "Day 2");
//        dataSet.setValue(2012, "Year", "Day 3");
//        dataSet.setValue(2013, "Year", "Day 4");
//
//        JFreeChart chart = ChartFactory.createBarChart("BMI", "Year", "Day", dataSet, PlotOrientation.VERTICAL, false, true, false);
//
//
//        ChartUI inter = new ChartUI(dataSet);
//        inter.setVisible(true);


        DefaultCategoryDataset dataSet = new DefaultCategoryDataset();

        for (BmiResult bmiResult : listBMIResult) {
            double bmiValue = bmiResult.getBmi();
            String dateFormatted = bmiResult.getDate_added().format(DateTimeFormatter.ofPattern("dd-MM-yyyy HH:mm:ss"));

            String dayKey = dateFormatted; 

            dataSet.setValue(bmiValue, "BMI", dayKey);
        }

        JFreeChart chart = ChartFactory.createBarChart(
                "BMI Chart",
                "Day", 
                "BMI Value", 
                dataSet, // Dataset
                PlotOrientation.VERTICAL,
                false,
                true,
                false
        );

        // Display the chart in a new window
        ChartUI chartUI = new ChartUI(dataSet);
        chartUI.setVisible(true);

    }//GEN-LAST:event_jButtonGenerateActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(StatsUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(StatsUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(StatsUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(StatsUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new StatsUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonGenerate;
    private javax.swing.JButton jButtonHome;
    private javax.swing.JButton jButtonPrint;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabelUser;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableResult;
    // End of variables declaration//GEN-END:variables

    private static java.util.List<java.lang.String> viewBmiResult(java.lang.String email) {
        com.bmicalc.services.BMICalcWebService_Service service = new com.bmicalc.services.BMICalcWebService_Service();
        com.bmicalc.services.BMICalcWebService port = service.getBMICalcWebServicePort();
        return port.viewBmiResult(email);
    }

    private static String classifyBMI(double bmi) {
        com.bmicalc.services.BMICalcWebService_Service service = new com.bmicalc.services.BMICalcWebService_Service();
        com.bmicalc.services.BMICalcWebService port = service.getBMICalcWebServicePort();
        return port.classifyBMI(bmi);
    }
}
